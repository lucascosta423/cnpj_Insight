name: Build and Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/cnpjinsight-app:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/cnpjinsight-app:latest

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Atualizar repositório na VM
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            # Criar diretório se não existir
            mkdir -p ~/deploy/cnpj_Insight
          
            # Se o repositório já existe, fazer pull
            if [ -d ~/deploy/cnpj_Insight/.git ]; then
              echo 'Atualizando repositório existente...'
              cd ~/deploy/cnpj_Insight
              git fetch origin
              git reset --hard origin/main
              git clean -fd
            else
              # Se não existe, clonar o repositório
              echo 'Clonando repositório...'
              cd ~/deploy
              rm -rf cnpj_Insight
              git clone https://github.com/${{ github.repository }}.git cnpj_Insight
              cd cnpj_Insight
            fi
          
            echo 'Repositório atualizado com sucesso!'
            git log --oneline -1
          "

      - name: Criar arquivo .env no servidor
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
          cd ~/deploy/cnpj_Insight
          cat > .env <<EOF
          SPRING_DATABASE_HOST=${{ secrets.SPRING_DATABASE_HOST }}
          SPRING_DATABASE_PORT=${{ secrets.SPRING_DATABASE_PORT }}
          SPRING_DATABASE_NAME=${{ secrets.SPRING_DATABASE_NAME }}
          SPRING_DATABASE_USERNAME=${{ secrets.SPRING_DATABASE_USERNAME }}
          SPRING_DATABASE_PASSWORD=${{ secrets.SPRING_DATABASE_PASSWORD }}
          SPRING_DATABASE_SCHEMA=${{ secrets.SPRING_DATABASE_SCHEMA }}
          SPRING_PROFILES_ACTIVE=docker
          SERVER_PORT=8080
          EOF
          "

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd ~/deploy/cnpj_Insight &&
            docker-compose pull &&
            docker-compose down &&
            docker-compose up -d
          "

      - name: Verificar status do deployment
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd ~/deploy/cnpj_Insight &&
            echo 'Status dos containers:' &&
            docker-compose ps &&
            echo '' &&
            echo 'Último commit deployado:' &&
            git log --oneline -1
          "